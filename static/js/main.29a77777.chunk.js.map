{"version":3,"sources":["containers/Container.js","components/InfoSection.js","pages/Home.js","pages/Team.js","pages/Company.js","components/Dropdown.js","components/Navbar.js","components/Layout.js","components/ProfileSection.js","pages/Profile.js","components/JobsBoard.js","pages/Jobs.js","components/JobListing.js","AppRoutes.js","App.js","index.js"],"names":["Contain","styled","div","Container","className","children","InfoSec","lightSection","InfoRow","leadingImage","InfoColumn","imagePath","TextWrapper","Heading","h1","Subtitle","h2","Subsubtitle","h3","Description","p","ImageWrapper","props","start","Img","img","ActionContainer","Highlight","span","InfoBulletList","ul","InfoSection","headline","subheading","subsubheading","description","alt","callsToAction","actionLink","bulletList","map","item","highlight","text","indexOf","call","external","href","target","rel","to","src","Home","data","splashposts","obj","toString","process","imgPath","key","HeaderSection","AboutCard","CardGallery","CardContainer","Team","useState","isLoading","setIsLoading","employees","setEmployees","useEffect","employee","fullName","titleFull","department","titleAbbr","id","SubsiduarySection","Rulebreak","Subsiduaries","style","listStyle","subsiduaries","DropMenu","SubMenu","open","SubMenuItem","li","SubMenuLink","Link","Header","DropDownContainer","Dropdown","setOpen","handleClick","onMouseOver","onMouseOut","onClick","header","links","link","url","Nav","nav","NavImage","NavMenu","click","NavItem","NavLink","BannerNav","MobileIcon","Navbar","setClick","Provider","value","color","window","Main","main","Layout","Image","SectionContainer","ProfileSection","image","Profile","match","entity","profile","setEntity","setProfile","provided","selector","path","split","params","loading","profiles","profileId","quote","profileAbout","element","textItems","par","JobBoard","JobPost","JobSection","JobsBoard","jobsBoard","jobPosts","post","company","title","Jobs","Company","Title","Content","BulletList","BulletItem","Paragraph","JobListing","jobListing","setJobListing","console","log","sections","section","paragraphs","paragraph","bulletSection","point","UnauthorizedAppRoutes","exact","component","AppRoutes","GlobalStyle","createGlobalStyle","App","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.29a77777.chunk.js","sourcesContent":["import React from 'react'\nimport styled from 'styled-components'\n\nexport const Contain = styled.div`\n    padding: 1rem;\n`\n\nconst Container = ({className, children}) => {\n    return (\n        <Contain className={className}>\n           {children} \n        </Contain>\n    )\n}\n\nexport default Container\n","import React from 'react'\nimport styled from 'styled-components'\nimport Container from '../containers/Container'\nimport { NavLink } from 'react-router-dom'\n\nconst InfoSec = styled.div`\n    padding: 160px 0;\n    background: ${({ lightSection }) => (lightSection === \"true\" ? '#fff' : '#763459')};\n    color: ${({ lightSection }) => (lightSection === \"true\" ? 'black' : 'white')};\n`\n\nexport const InfoRow = styled.div`\n    display: flex;\n    padding: 16px;\n    flex-wrap: wrap;\n    align-items: center;\n    flex-direction: ${({ leadingImage }) =>  (leadingImage === \"true\" ? 'row-reverse' : 'row')};\n`\n\nexport const InfoColumn = styled.div`\n    margin-bottom: 15px;\n    max-width: ${({imagePath}) => imagePath ? \"50%\" : \"100%\"};\n    flex-basis: 50%;\n    flex: 1;\n    display: flex;\n    @media screen and (max-width: 790px) {\n        max-width: 100%;\n        flex-basis: 100%;\n        display: flex;\n        justify-content: center;\n    }\n`\n\nexport const TextWrapper = styled.div`\n    padding: 0 5rem;\n    padding-bottom: 60px;\n`\n\nconst Heading = styled.h1`\n    font-size: 2rem;\n    line-height: 1.1;\n`\n\nconst Subtitle = styled.h2`\n    font-size: 1.5rem;\n    max-width: 440px;\n    line-height: 24px;\n`\nconst Subsubtitle = styled.h3`\n    font-size: 1rem;\n    max-width: 440px;\n    line-height: 24px;\n`\n\nconst Description = styled.p``\n\nconst ImageWrapper = styled.div`\n    display: flex;\n    justify-content: ${(props) => (props.start === \"true\" ? 'flex-start' : 'flex-end')};\n`\n\nconst Img = styled.img`\n    padding-right: 0;\n    max-width: 100%;\n    vertical-align: middle;\n    display: inline-block;\n    max-height: 500px;\n`\n\nexport const ActionContainer = styled.div`\n    display:flex;\n    width: 100%;\n    justify-content: space-around;\n\n    & Navlink, a {\n        display:flex;\n        justify-content: center;\n        background-color: #763459;\n        color: #fff;\n        font-weight: bold;\n        width: 15rem;\n        border-radius: 25px;\n        padding: 5px;\n        margin: 5px 0;\n    }\n`\n\nconst Highlight = styled.span`\n    color: #763459;\n    font-weight: bold;\n    font-size:large;\n`\nconst InfoBulletList = styled.ul`\n    list-style: none;\n\n    & li {\n        padding-bottom: 7px;\n    }\n`\n\nconst InfoSection = ({\nheadline,\nsubheading,\nsubsubheading,\ndescription,\nleadingImage,\nimagePath,\nstart,\nalt,\nlightSection,\nclassName,\ncallsToAction,\nactionLink,\nbulletList,\nchildren\n}) => {\n    return (\n        <>\n            <InfoSec className={className} lightSection={lightSection}>\n                <Container>\n                    <InfoRow leadingImage={leadingImage}>\n                        <InfoColumn imagePath={imagePath}>\n                            <TextWrapper>\n                                <Heading>{headline}</Heading>\n                                <Subtitle>{subheading}</Subtitle>\n                                <Subsubtitle>{subsubheading}</Subsubtitle>\n                                {/* <Description>{description}</Description> */}\n                                <Description>{children}</Description>\n                                {/* optional bullet list */}\n                                <InfoBulletList>\n                                {bulletList ? \n                                bulletList.map(item => {\n                                        return <li key={bulletList.indexOf(item)}>\n                                            <Highlight>{item.highlight}</Highlight>\n                                            {item.text}\n                                        </li>\n                                })\n                                : null}\n                                </InfoBulletList>\n                                {/* optional call to action */}\n                                <ActionContainer>\n                                {callsToAction ?\n                                 callsToAction.map(call => {\n                                    return (\n                                        call.external ?\n                                        <a href={call.actionLink} target='_blank' key={callsToAction.indexOf(call)} rel=\"noreferrer\">{call.text}</a> :\n                                        <NavLink to={call.actionLink || actionLink} key={callsToAction.indexOf(call)}>{call.text}</NavLink>\n                                    )\n                                 })\n                                 : null}\n                                 </ActionContainer>\n                                   \n                            </TextWrapper>\n                        </InfoColumn>\n                        { imagePath ? (\n                        <InfoColumn>\n                            <ImageWrapper start={start}>\n                                <Img src={imagePath} alt={alt} />\n                            </ImageWrapper>\n                        </InfoColumn>) : null\n                        }\n                    </InfoRow>\n                </Container>\n            </InfoSec>\n        </>\n    )\n}\n\nexport default InfoSection\n","import React from 'react'\nimport InfoSection from '../components/InfoSection'\n\nimport data from '../data/db.json'\n\nconst Home = () => {\n    return (\n        <>\n            {data.splashposts.map(obj => {\n                return <InfoSection\n                headline={obj.headline}\n                subheading={obj.subheading}\n                leadingImage={obj.leadingImage.toString()}\n                imagePath={process.env.PUBLIC_URL + obj.imgPath}\n                start={obj.start.toString()}\n                alt={obj.alt}\n                lightSection={obj.lightSection.toString()}\n                key={obj.key}\n                >\n                    {obj.description}\n                </InfoSection>\n            })}\n        </>\n    )\n}\n\nexport default Home\n","import React, { useState, useEffect } from 'react'\nimport InfoSection, { TextWrapper, ActionContainer } from '../components/InfoSection'\nimport { NavLink } from 'react-router-dom'\nimport Container, { Contain } from '../containers/Container'\nimport styled from 'styled-components'\n\nimport data from '../data/db.json'\n\nconst HeaderSection = styled(InfoSection)`\n    padding: 0px;\n`\n\nexport const AboutCard = styled(InfoSection)`\n    width: 100%;\n    padding: 0px;\n    border: solid 3px #763459;\n    border-radius: 25px;\n    margin-bottom: 15px;\n\n    img {\n        border-radius: 25px;\n    } \n\n    ${Contain} {\n        padding: 0px;\n    }\n\n    ${TextWrapper} {\n        padding: 0 2rem;\n    }\n    \n    ${ActionContainer} {\n        flex-flow: nowrap column;\n        align-items: center;\n    }\n`\n\nconst CardGallery = styled(Container)`\n    display: flex;\n    flex-wrap: wrap;\n    align-items: center;\n    justify-content: space-evenly;\n    padding: 0;\n`\n\nconst CardContainer = styled(Container)`\n    width: 48%;\n    padding: 0;\n    \n    @media screen and (max-width: 1250px) {\n        width: 100%;\n    }\n`\n\n// Not currently required\n// was used to wrap the whole card in a clickable link to take to individual person page\n// const CardLink = styled(NavLink)`\n//     width: 48%; // this is the flex item inside the card gallery, to wrap it all in a link\n//     text-decoration: none;\n//     cursor: pointer;\n//     display: flex;\n\n//     @media screen and (max-width: 1250px) {\n//         width: 100%;\n//     }\n// `\n\nconst Team = () => {\n\n    const [isLoading, setIsLoading] = useState(true)\n    const [employees, setEmployees] = useState([])\n\n    useEffect(() => {\n        setEmployees(data.employees);\n        setIsLoading(false);\n    }, [])\n    \n    return (\n        <>\n            {!isLoading && (\n            <>\n                <Container>\n                        <HeaderSection\n                        headline=\"Meet the team!\"\n                        description=\"Here at PLUM ltd. we do this and these are our team members who back those decisions.\"\n                        lightSection=\"true\"\n                        />\n                        <CardGallery>\n                                {employees.map(employee => {\n                                    return <CardContainer key={employee.id}>\n                                            <AboutCard\n                                            headline={employee.fullName}\n                                            subheading={employee.titleFull}\n                                            subsubheading={employee.department}\n                                            leadingImage=\"true\"\n                                            imagePath={process.env.PUBLIC_URL + employee.imagePath}\n                                            start=\"true\"\n                                            alt={`${employee.titleAbbr} ${employee.fullName}`}\n                                            lightSection=\"true\"\n                                            callsToAction={employee.callsToAction}\n                                            >\n                                                {/* {employee.quote} */}\n                                            </AboutCard>\n                                        </CardContainer>\n                                })}\n                        </CardGallery>\n                </Container>\n            </>)}\n        </>\n    )\n}\n\nexport default Team\n","import React from 'react'\nimport InfoSection from '../components/InfoSection'\nimport styled from 'styled-components'\n\nimport data from '../data/db.json'\nimport Container from '../containers/Container'\nimport { TextWrapper } from '../components/InfoSection'\n\nexport const SubsiduarySection = styled(InfoSection)`\n    padding: 0;\n`\n\nexport const Highlight = styled.span`\n    color: #763459;\n    font-weight: bold;\n    font-size:large;\n`\n\nconst Rulebreak = styled.div`\n    border: solid 2px #763459;\n`\n\n\nconst Subsiduaries = () => {\n    return (\n        <>\n            <Container>\n                <TextWrapper>\n                    <h1>About Plum Ltd.</h1>\n                    <p>\n                        Plum Ltd. is a provider of cyber technology, software\n                        development and cosulting based services in the UK.\n                    </p>\n                        \n                    <p>\n                        Plum Ltd. was formed in 1995  and is a specialist \n                        provider of technology products and services to the \n                        defense sector and has grown over the years branching \n                        into multiple markets.  Plum Ltd. has 10,000 employees \n                        based in the UK but is looking for offices in other \n                        locations in the US and Australia to offer a 24 hour a \n                        day service to its customers.\n                    </p>\n\n                    <p>\n                        Plum Ltd. core customers consist of:\n                    </p>\n                    <ul style={{listStyle: \"none\"}}>\n                        <li>\n                            <Highlight>Defences orginsations: </Highlight> \n                            Plum Ltd. has significant\n                            contracts for suppporting core IT, communication\n                            and operational systems of the UK MoD, US DoD and\n                            NATO. Plum Ltd. are often engaged on projects\n                            SECRET and TOP SECRET information assets and systems.\n                            <br /><br />\n                        </li>\n                        <li>\n                            <Highlight>Central Government Organisations: </Highlight>\n                            Plum Ltd. have been engaged in major gorvernment system\n                            integrations, developing specific software solutions alongside\n                            providing managed services such as Security Operation Centre (SOC)\n                            services and defensive and offensive security capabilities.\n                            <br /><br />\n                        </li>\n                        <li>\n                            <Highlight>Industrial organisations: </Highlight>\n                            Given Plum Ltd. specialist engineering background they have\n                            deep expertise in Industrial Control Systems (ICS) and \n                            provide managed security services to major clients in sectors \n                            such as Oil and Gas, Water management and elctricity distribution.\n                            <br /><br />\n                        </li>\n                        <li>\n                            <Highlight>Financial institutions: </Highlight>\n                            Plum Ltd. have provided specialist security services, including\n                            threat and intelligence monitoring to global financial instutions.\n                            <br /><br />\n                        </li>\n                    </ul>\n                </TextWrapper>\n            </Container>\n            {data.subsiduaries.map(obj => {\n                return <div key={obj.id}>\n                    <Rulebreak />\n                    <SubsiduarySection\n                    headline={obj.fullName}\n                    subheading={obj.subheading}\n                    leadingImage={obj.leadingImage.toString()}\n                    imagePath={process.env.PUBLIC_URL + obj.imagePath}\n                    start={obj.start.toString()}\n                    alt={obj.alt}\n                    lightSection={obj.lightSection.toString()}\n                    key={obj.key}\n                    callsToAction={obj.callsToAction}\n                    actionLink={`/subsiduaries/${obj.id}`}\n                    >\n                        {obj.description}\n                    </SubsiduarySection>\n                </div>\n            })}\n        </>\n    )\n}\n\nexport default Subsiduaries\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { NavLink as Link } from 'react-router-dom'\nimport { FaCaretDown } from 'react-icons/fa'\nimport Container from '../containers/Container'\n\nconst DropMenu = styled.div`\n    display: flex;\n    align-items: center;\n    height: 100%;\n    width: 8rem;\n    text-decoration: none;\n    cursor: pointer;\n    color: #fff;\n    padding: 0.5rem 0;\n    margin: 0;\n    /* border: solid 2px yellow; */\n    flex-direction: column;\n    z-index: 10;\n\n    @media screen and (max-width: 790px) {\n        width: 100vw;\n        padding-bottom: 0;\n        /* border: solid 2px yellow;   */\n    }\n`\n\nconst SubMenu = styled.ul`\n    /* border: solid 2px green; */\n    /* width: 100%; */\n    list-style: none;\n    text-align: center;\n    display: flex;\n    flex-direction: column;\n    align-items: center;\n    justify-content: space-around;\n    padding: 0;\n    background: #763459;\n    /* margin-top: 0.5rem; */\n    display: ${({open}) => open ? 'block' : 'none'};\n    transition: all 0.2s ease;\n\n    @media screen and (max-width: 790px) {\n        width: 100%;\n        margin: 0;\n        display: block;\n    }\n`\n\nconst SubMenuItem = styled.li`\n    width: 100%;\n    text-align: center;\n    padding: 10px 0;\n    /* height: 40px; */\n    /* border: solid 1px cyan; */\n\n    :hover {\n        background-color: #823e65;\n        /* b05187 */\n    }\n`\n\nconst SubMenuLink = styled(Link)`\n    text-decoration: none;\n    color: #fff;\n    /* padding: 1rem; */\n`\n\nconst Header = styled.div`\n    /* border: solid 2px blue; */\n    width: 100%;\n    padding-top: 14px;\n    padding-bottom: 0;\n\n    @media screen and (max-width: 790px) {\n        display: none;\n    }\n`\n\nconst DropDownContainer = styled(Container)`\n    /* border: solid 2px orange; */\n    height: 100%;\n    /* width: 100%; */\n    padding: 0;\n\n    @media screen and (max-width: 790px) {\n        height: auto;\n    }\n`\n\nconst Dropdown = (props) => {\n    const [ open, setOpen ] = useState(false);\n\n    const handleClick = () => setOpen(!open);\n\n    const handleMouseOver = () => {\n        setOpen(true);\n    }\n\n    const handleMouseOut = () => {\n        setOpen(false);\n    }\n    \n    return (\n        <>\n            <DropDownContainer>\n                <DropMenu onMouseOver={handleMouseOver} onMouseOut={handleMouseOut}>\n                    <Header onClick={handleClick}>{props.header}<FaCaretDown /></Header>\n                    <SubMenu open={open}>\n                        {props.links.map((link) => {\n                            return (\n                            <SubMenuItem onClick={handleClick} key={link.key}>\n                                <SubMenuLink to={link.url}>{link.text}</SubMenuLink>\n                            </SubMenuItem>\n                            )\n                        })}\n                    </SubMenu>\n                </DropMenu>  \n            </DropDownContainer>\n        </>\n    )\n}\n\nexport default Dropdown\n","import React, { useState } from 'react'\nimport styled from 'styled-components'\nimport { NavLink as Link } from 'react-router-dom'\nimport { FaBars, FaTimes } from 'react-icons/fa'\nimport { IconContext } from 'react-icons/lib'\nimport Dropdown from './Dropdown'\n\nconst Nav = styled.nav`\n    background-color: #763459;\n    display: flex;\n    position: fixed;\n    height: 100px;\n    width: 100%;\n    /* padding: 0.5rem calc((100vw - 1280px) / 2); */\n    justify-content: space-between;\n    z-index: 10;\n`\n\nconst NavImage = styled.img`\n    height: 100px;\n    width: 15rem;\n`\n\nconst NavMenu = styled.ul`\n    display: flex;\n    align-items: center;\n    list-style: none;\n    text-align: center;\n    padding: 0;\n    /* border: solid 1px blue; */\n\n    @media screen and (max-width: 790px) {\n        display: flex;\n        flex-direction: column;\n        width: 100%;\n        height: 90vh;\n        position: absolute;\n        top: 80px;\n        left: ${({click}) => click ? 0 : '-100%'};\n        transition: all 0.2s ease;\n        background: #763459;\n    }\n`\n\nconst NavItem = styled.li`\n    height: 40px;\n    /* border: solid 1px pink; */\n\n    @media screen and (max-width: 790px) {\n        width: 100%;\n    }\n\n    & .link {\n    display: flex;\n    align-items: center;\n    height: 100%;\n    text-decoration: none;\n    cursor: pointer;\n    color: #fff;\n    padding-right: 1rem;\n\n        :hover {\n            background-color: #823e65;\n        }\n\n        &.active {\n            color: coral;\n            > span {\n                padding: 5px 0;\n                border-top: solid 1px coral;\n                border-bottom: solid 1px coral;\n            }\n        }\n\n        @media screen and (max-width: 790px) {\n            justify-content: center;\n            width: 100%;\n            padding: 0;\n        }\n    }\n`\n\nconst NavLink = styled(Link)`\n    display: flex;\n    align-items: center;\n    height: 100%;\n    text-decoration: none;\n    cursor: pointer;\n    color: #fff;\n    padding-right: 1rem;\n\n    :hover {\n        background-color: #823e65;\n    }\n\n    &.active {\n        color: coral;\n        > span {\n            padding: 5px 0;\n            border-top: solid 1px coral;\n            border-bottom: solid 1px coral;\n        }\n    }\n\n    @media screen and (max-width: 790px) {\n        justify-content: center;\n        width: 100%;\n        padding: 0;\n    }\n`\n\nconst BannerNav = styled(NavLink)`\n    :hover {\n        background-color: #763459;\n    }\n`\n\nconst MobileIcon = styled.div`\n    display: none;\n\n    @media screen and (max-width: 790px) {\n        display: block;\n        top: 0;\n        right: 0;\n        transform: translate(-100%, 40%);\n    }\n`\n\nconst Navbar = () => {\n\n    const [ click, setClick ] = useState(false);\n\n    const handleClick = () => setClick(!click);\n\n    return (\n        <>\n        <IconContext.Provider value={{color: '#fff'}}>\n            <Nav>\n                <BannerNav to='/'>\n                    <NavImage src={process.env.PUBLIC_URL + '/images/plum.png'} alt='plum logo' />\n                </BannerNav>\n                <MobileIcon onClick={handleClick}>\n                    {click ? <FaTimes /> : <FaBars />}\n                </MobileIcon>\n                <NavMenu onClick={handleClick} click={click}>\n                    <Dropdown \n                    header=\"About us\"\n                    links={[\n                        {\n                            key: 0,\n                            url: \"/subsiduaries\",\n                            text: \"Our Subsiduaries\"\n                        },\n                        {\n                            key: 1,\n                            url: \"/people\",\n                            text: \"Meet the team\"\n                        },\n                    ]}/>\n                    <NavItem>\n                        <Link className=\"link\" to='/jobs'><span>Jobs Board</span></Link>\n                    </NavItem>\n                    <NavItem>\n                        <span className=\"link\" onClick={() => {\n                            window.open('https://drive.google.com/drive/folders/1mJ000vGMezx9mMwWVngpqG-WIdscaMWL?usp=sharing', '_blank');\n                            return null;\n                        }} target='_blank' rel=\"noreferrer\">Intranet</span>\n                    </NavItem>\n                </NavMenu>\n            </Nav>\n        </IconContext.Provider>\n        </>\n    )\n}\n\nexport default Navbar\n\n","import React from 'react'\nimport styled from 'styled-components'\nimport Navbar from './Navbar'\n\nconst Main = styled.main`\n    padding-top: 7rem;\n`\n\nconst Layout = ({children}) => {\n    return (\n        <>\n            <Navbar />\n            <Main>\n                {children}\n            </Main>\n        </>\n    )\n}\n\nexport default Layout\n","import Container from '../containers/Container'\nimport React from 'react'\nimport styled from 'styled-components'\n\nconst InfoRow = styled.div`\n    display: flex;\n    align-content: flex-start;\n    justify-content: stretch;\n`\n\nconst InfoColumn = styled.div`\n    margin: 0 5rem;\n`\n\nconst ImageWrapper = styled.div`\n    display: flex;\n    justify-content: flex-start;\n    width: 100%;\n    /* border: solid 3px pink; */\n`\n\nconst Image = styled.img`\n    max-width: 20rem;\n    border-radius: 25px;\n`\n\nconst TextWrapper = styled.div`\n`\n\nconst SectionContainer = styled(Container)`\n    padding: 2px;\n`\n\nconst ProfileSection = ({image, alt, children}) => {\n    return (\n        <>\n            <SectionContainer>\n                <InfoRow>\n                    {image == null ? null : <InfoColumn>\n                        <ImageWrapper>\n                            <Image src={image} alt={alt} />\n                        </ImageWrapper>\n                    </InfoColumn> }\n                    <InfoColumn>\n                        <TextWrapper>\n                            {children}\n                        </TextWrapper>\n                    </InfoColumn>\n                </InfoRow>\n            </SectionContainer>\n        </>\n    )\n}\n\nexport default ProfileSection\n","import React, { useState, useEffect } from 'react'\nimport ProfileSection from '../components/ProfileSection';\nimport { SubsiduarySection } from './Company';\n\nimport data from '../data/db.json'\n\nconst Profile = ({match}) => {\n    const [isLoading, setIsLoading] = useState({entity:true, profile:true});\n    const [entity, setEntity] = useState();\n    const [profile, setProfile] = useState();\n\n    useEffect(() => {\n        let provided = {}\n        let selector = null;\n        if (match.path.split(\"/\")[1] === \"people\") {\n            selector = data.employees\n        } else if (match.path.split(\"/\"[1] === \"subsiduaries\")) {\n            selector = data.subsiduaries\n        }\n\n        /* \n        These two for loops below are probably a bad way of representing this\n        'fake' api call, but it was all for the understanding of how useEffect\n        works and how apis would be called. I then ran into scoping issues\n        trying to piece this together.\n\n        The actual solution would be to perform two different api requests (or \n        one with multiple tables) to fetch the data and then manipulate or \n        compare it afterwards using associated record values.\n        */\n        for (let obj of selector){\n            if (obj.id.toString() === match.params.id) {\n                let loading = isLoading\n                provided.obj = obj\n                setEntity(obj);\n                loading.entity = false;\n                setIsLoading(loading);\n            }\n        }\n\n        /*\n        This if block is to provide some slight validation, such that not *any*\n        link can be accessed causing the pogram to crash or display error messages.\n        I could even remove this block to prove the 'insecurity' of the website.\n        */\n        if (provided.obj) {\n            for (let profile of data.profiles) {\n                if (profile.id === provided.obj.profileId) {\n                    let loading = isLoading;\n                    setProfile(profile);\n                    loading.profile = false;\n                    setIsLoading(loading);\n                }\n            }\n        }\n    }, [isLoading, match.params.id, match.path])\n\n    return (\n        !isLoading.entity && !isLoading.profile && (\n        <>\n            {/* \n            This is just to type differentiate between dynamic 'entities'\n            The pseudo dynamic routing offers different urls, rather than\n            giving the data object a type. Specific for use-case, obviusly not\n            good practice. Shows url validation to some extent though.\n            */}\n            { match.path.split(\"/\")[1] === \"people\" ? (\n            <ProfileSection\n            image={'imagePath' in entity ? process.env.PUBLIC_URL + entity.imagePath : null}\n            alt={'imagePath' in entity ? entity.fullName : null}>\n                <h1>{entity.fullName}</h1>\n                <h2>{entity.titleFull}</h2>\n                <p><em>{entity.quote}</em></p>\n            </ProfileSection>\n            ) : null}\n           \n\n            {profile.profileAbout.map(element => {\n                        return <SubsiduarySection \n                        headline={element.headline}\n                        subheading={element.subheading}\n                        leadingImage={\"leadingImage\" in element ? element.leadingImage.toString() : null}\n                        imagePath={element.imagePath ? process.env.PUBLIC_URL + element.imagePath : null}\n                        start={\"true\"}\n                        alt={element.alt}\n                        lightSection={\"true\"}\n                        bulletList={element.bulletList}\n                        key={element.key}\n                        >\n                            {\"textItems\" in element ? element.textItems.map(par => {\n                                return <p key={`par${element.textItems.indexOf(par)}`}>{par}</p>\n                            }) : null}\n                        </SubsiduarySection>\n                    })}\n\n        </>\n        )\n    )\n}\n\nexport default Profile\n","import React, {useState} from 'react'\nimport Container from '../containers/Container'\nimport styled from 'styled-components'\nimport InfoSection from './InfoSection'\n\nimport data from '../data/db.json'\n\nconst JobBoard = styled(Container)`\n    display: flex;\n    justify-content: space-around;\n    flex-flow: row wrap;\n`\n\nconst JobPost = styled(Container)`\n    display: flex;\n    justify-content: center;\n    border: solid 1px coral;\n    box-shadow: 2px 2px 2px grey;\n    margin-bottom: 20px;\n\n    @media screen and (max-width: 750px) {\n        padding: 0;\n        width: 100%;\n    }\n`\n\nconst JobSection = styled(InfoSection)`\n    padding: 0 4rem;\n    display: flex;\n    justify-content: center;\n\n    @media screen and (max-width: 750px) {\n        padding: 0;\n        width: 100%;\n    }\n`\n\nconst JobsBoard = () => {\n    const [jobPosts] = useState(data.jobsBoard)\n    return (\n        <>\n            <JobBoard>\n                \n                {jobPosts.map(post => {\n                    return (\n                        <JobPost key={jobPosts.indexOf(post)}>\n                            <JobSection\n                            headline={post.company}\n                            subheading={post.title}\n                            lightSection={\"true\"}\n                            callsToAction={post.callsToAction}\n                            actionLink={`/jobs/${post.id}`}\n                            >\n                            {post.description}\n                            </JobSection>\n                        </JobPost>\n                    )\n                })}\n                \n            </JobBoard>\n        </>\n    )\n}\n\nexport default JobsBoard\n","import React from 'react'\nimport JobsBoard from '../components/JobsBoard'\nimport Container from '../containers/Container'\nimport styled from 'styled-components'\n\nconst Header = styled(Container)`\n    display: flex;\n    justify-content: center;\n    align-items: flex-start;\n`\n\nconst TextWrapper = styled(Container)`\n    max-width: 1250px;\n`\n\nconst Jobs = () => {\n    return (\n        <>\n            <Container>\n                <Header>\n                    <TextWrapper>\n                        <h1>Vacancies</h1>\n                        <p>Grow your Career with us here at PLUM Limited. Here at plum we are looking for strong talented individuals to expand our workforce. Below you can find the current vacancies that are available.</p>\n                    </TextWrapper>\n                </Header>\n                <JobsBoard />\n            </Container>\n        </>\n    )\n}\n\nexport default Jobs\n","import React, { useState, useEffect } from 'react'\nimport Container from '../containers/Container'\nimport styled from 'styled-components'\n\nimport data from '../data/db.json'\n\nconst Company = styled.h1``\n\nconst Title = styled.h2``\n\nconst Header = styled.div``\n\nconst Heading = styled.h3``\n\nconst Content = styled.div``\n\nconst BulletList = styled.ul``\n\nconst BulletItem = styled.li``\n\nconst Paragraph = styled.p``\n\nconst JobListing = ({match}) => {\n    const [isLoading, setIsLoading] = useState(true);\n    const [jobListing, setJobListing] = useState();\n\n    useEffect(() => {\n        for (let obj of data.jobsBoard) {\n            if (obj.id === match.params.id) {\n                console.log(obj);\n                setJobListing(obj);\n                setIsLoading(false);\n            }\n        }\n    }, [match.params.id])\n\n    return (\n        !isLoading && (\n        <>\n            <Container>\n                <Header>\n                    <Company>{jobListing.company}</Company>\n                    <Title>{jobListing.title}</Title>\n                </Header>\n                <Content>\n                    {jobListing.sections.map(section => {\n                        return (\n                            <div key={jobListing.sections.indexOf(section)}>\n                                <Heading>{section.header}</Heading>\n                                {section.paragraphs.map(paragraph => {\n                                    return <Paragraph key={section.paragraphs.indexOf(paragraph)}>{paragraph}</Paragraph>\n                                })}\n                                <BulletList>\n                                    {section.bulletSection.map(point => {\n                                        return <BulletItem key={section.bulletSection.indexOf(point)}>{point}</BulletItem>\n                                    })}\n                                </BulletList>\n                            </div>\n                        )\n                    })}\n                </Content>\n            </Container>\n        </>\n        )\n    )\n}\n\nexport default JobListing\n","import React from 'react'\nimport { HashRouter as Router, Switch, Route } from 'react-router-dom'\n\nimport Home from './pages/Home'\nimport Team from './pages/Team'\nimport Company from './pages/Company'\nimport Layout from './components/Layout'\nimport Profile from './pages/Profile'\nimport Jobs from './pages/Jobs'\nimport JobListing from './components/JobListing'\n\n\nconst AppRoutes = () => {\n    return (\n        <Router>\n            <Layout>\n                <Switch>\n                    <UnauthorizedAppRoutes />\n                </Switch>\n            </Layout>\n        </Router>\n    )\n}\n\n// here for incase of login context to be added later\n// const AppRoutes = () => {\n//     return (\n//         <Router>\n//             <Navbar />\n//             <main>\n//                 <Switch>\n//                     <UnauthorizedAppRoutes />\n//                 </Switch>\n//             </main>\n//         </Router>\n//     )\n// }\n\nconst UnauthorizedAppRoutes = () => {\n    return (\n        <>\n            <Route path='/' exact component={Home} />\n            <Route path='/people' exact component={Team} />\n            <Route path='/subsiduaries' exact component={Company} />\n            {/* \n                Yes these two below are supposed to be the same, they utilise the same component\n                the people route not in use as moved to social buttons\n            */}\n            {/* <Route path='/people/:id' component={Profile} /> */}\n            <Route path='/subsiduaries/:id' component={Profile} />\n            {/* Yes these two above are supposed to be the same, they utilise the same component*/}\n            <Route path='/jobs' exact component={Jobs} />\n            <Route path='/jobs/:id' component={JobListing} />\n        </>\n    )\n}\n\nexport default AppRoutes\n","import AppRoutes from './AppRoutes';\nimport { createGlobalStyle } from 'styled-components';\n\nconst GlobalStyle = createGlobalStyle`\n  html,\n  body,\n  #root {\n    font-family: \"Lato\", sans-serif;\n    box-sizing: border-box;\n    margin: 0;\n    padding: 0;\n    height: 100%;\n    width: 100%;\n  }\n`\n\nfunction App() {\n  return (\n    <>\n      <GlobalStyle />\n      <AppRoutes />\n    </>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}